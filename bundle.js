(()=>{"use strict";function e(e,t){const s=t*t;return 0===e?"top-left":e===t-1?"top-right":e>0&&e<t-1?"top":e===s-t?"bottom-left":e%t==0&&e!==s-t?"left":e===s-1?"bottom-right":(e+1)%t==0&&e!==t*(t-1)?"right":e>s-t&&e<s-1?"bottom":"center"}class t{constructor(e,s="generic"){if(new.target===t)throw new Error("–û—à–∏–±–∫–∞: –ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ Character");this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=s}lvlUpConstructor(){const e=Math.max(this.attack,this.attack*(80+this.health)/100),t=Math.max(this.defence,this.defence*(80+this.health)/100);this.attack=Math.round(e),this.defence=Math.round(t)}lvlUp(){const e=Math.max(this.attack,this.attack*(80+this.health)/100),t=Math.max(this.defence,this.defence*(80+this.health)/100);this.attack=Math.round(e),this.defence=Math.round(t),this.level=this.level+1}}class s{constructor(e,s){if(!(e instanceof t))throw new Error("character must be instance of Character or its children");if("number"!=typeof s)throw new Error("position must be a number");this.character=e,this.position=s}}class i{constructor(e){this.characters=[...e]}}function a(e,t,s){const a=function*(e,t){const s=e.length;for(;;){const i=new(0,e[Math.floor(Math.random()*s)])(Math.floor(Math.random()*t)+1);yield i}}(e,t),o=[];for(let e=0;e<s;e++){const e=a.next().value;o.push(e)}return new i(o).characters}class o extends t{constructor(e,t){if(super(e,t),this.type="bowman",this.attack=25,this.defence=25,e>1)for(let t=1;t<e;t++)this.lvlUpConstructor()}}class n extends t{constructor(e,t){if(super(e,t),this.type="daemon",this.attack=17,this.defence=10,e>1)for(let t=1;t<e;t++)this.lvlUpConstructor()}}class l extends t{constructor(e,t){if(super(e,t),this.type="magician",this.attack=17,this.defence=40,e>1)for(let t=1;t<e;t++)this.lvlUpConstructor()}}class r extends t{constructor(e,t){if(super(e,t),this.type="swordsman",this.attack=40,this.defence=10,e>1)for(let t=1;t<e;t++)this.lvlUpConstructor()}}class h extends t{constructor(e,t){if(super(e,t),this.type="undead",this.attack=40,this.defence=10,this.flag=!1,e>1)for(let t=1;t<e;t++)this.lvlUpConstructor()}}class c extends t{constructor(e,t){if(super(e,t),this.type="vampire",this.attack=25,this.defence=25,e>1)for(let t=1;t<e;t++)this.lvlUpConstructor()}}class d{static from(e){return this.object=e,null}}const m=new class{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const s=document.createElement("div");s.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),s.addEventListener("mouseenter",(e=>this.onCellEnter(e))),s.addEventListener("mouseleave",(e=>this.onCellLeave(e))),s.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(s)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],i=document.createElement("div");i.classList.add("character",s.character.type);const a=document.createElement("div");a.classList.add("health-level");const o=document.createElement("div");o.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),o.style.width=`${s.character.health}%`,a.appendChild(o),i.appendChild(a),e.appendChild(i)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const i=this.cells[e],a=document.createElement("span");a.textContent=Math.round(t),a.classList.add("damage"),i.appendChild(a),a.addEventListener("animationend",(()=>{i.removeChild(a),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}};m.bindToDOM(document.querySelector("#game-container"));const u=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),p=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.noOneSelected=!0,this.bench=[],this.fieldBlocked=!1}init(){this.drawUi("prairie"),this.drawTeams(),this.addListeners(),this.initGameState(),this.gamePlay.setCursor("auto")}addListeners(){this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),0===this.gamePlay.newGameListeners.length&&(this.gamePlay.addNewGameListener(this.buttonNewGame.bind(this)),this.gamePlay.addSaveGameListener(this.buttonSaveGame.bind(this)),this.gamePlay.addLoadGameListener(this.buttonLoadGame.bind(this)))}onCellClick(e){if(this.currentSelected!==e){if(this.playerTeamPositions.includes(e)&&!0===this.gameState.step){this.gamePlay.selectCell(e),this.noOneSelected?this.noOneSelected=!1:this.gamePlay.deselectCell(this.currentSelected),this.currentSelected=e;const t=this.positionedTeams.find((t=>{if(t.position===e)return t}));this.currentHero=t,this.defineOpportunities(this.currentHero)}!1===this.noOneSelected&&this.currentHero.allowedMove.includes(e)&&this.move(e),!1===this.noOneSelected&&this.currentHero.allowedDamage.includes(e)&&!this.playerTeamPositions.includes(e)&&this.enemyTeamPositions.includes(e)&&this.attack(e),this.gameState.step||this.enemyStep()}}onCellEnter(e){const t=this.createHeader(e);this.teamPositions.includes(e)&&this.gamePlay.showCellTooltip(t,e),this.chooseCursor(e)}onCellLeave(e){this.gamePlay.hideCellTooltip(e),this.deleteCursor(e)}buttonNewGame(){this.bench=[],this.fieldBlocked=!1,this.livelyTeam=[],this.enemyTeamPositions=[],this.playerTeamPositions=[],this.positionedTeams=[],this.teamPositions=[],this.gamePlay.redrawPositions(this.positionedTeams),this.drawUi("prairie"),this.drawTeams(),this.gameState.step=!0,0===this.gamePlay.cellClickListeners.length&&(this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)))}drawUi(e){this.gamePlay.drawUi(e),this.ui=e}drawTeams(e){const t=[0,8,16,24,32,40,48,56,1,9,17,25,33,41,49,57],i=[6,14,22,30,38,46,54,62,7,15,23,31,39,47,55,63],d=a([o,r,l],2,3),m=a([n,h,c],2,3),u=[],p=[],f=[];for(let e=0;e<3;e++){let a=Math.floor(Math.random()*t.length),o=Math.floor(Math.random()*i.length);for(;u.includes(t[a]);)a=Math.floor(Math.random()*t.length);for(u.push(t[a]);p.includes(i[o]);)o=Math.floor(Math.random()*i.length);p.push(i[o]);const n=new s(d[e],u[e]),l=new s(m[e],p[e]);f.push(n),f.push(l)}this.enemyTeamPositions=p,this.playerTeamPositions=u,this.teamPositions=[...u,...p],this.positionedTeams=f,this.gamePlay.redrawPositions(f)}createHeader(e){const t=this.positionedTeams.find((t=>{if(t.position===e)return t}));if(t)return`üéñ${t.character.level} ‚öî${t.character.attack} üõ°${t.character.defence} ‚ù§${t.character.health}`}initGameState(){const e=new d;e.step=!0,this.gameState=e}chooseCursor(e){this.playerTeamPositions.includes(e)?this.gamePlay.setCursor("pointer"):this.gamePlay.setCursor("auto"),!1===this.noOneSelected&&this.currentHero.allowedMove.includes(e)&&!this.enemyTeamPositions.includes(e)&&this.gamePlay.selectCell(e,"green"),!1===this.noOneSelected&&this.currentHero.allowedDamage.includes(e)&&!this.playerTeamPositions.includes(e)&&this.enemyTeamPositions.includes(e)&&(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor("crosshair")),!1!==this.noOneSelected||this.currentHero.allowedDamage.includes(e)||this.currentHero.allowedMove.includes(e)||this.playerTeamPositions.includes(e)||this.gamePlay.setCursor("not-allowed"),!1!==this.noOneSelected||this.currentHero.allowedMove.includes(e)||this.enemyTeamPositions.includes(e)||this.playerTeamPositions.includes(e)||this.gamePlay.setCursor("not-allowed")}deleteCursor(e){this.noOneSelected||this.playerTeamPositions.includes(e)||this.gamePlay.deselectCell(e)}defineOpportunities(e){e.allowedDamage=[],e.allowedMove=[],e.column=e.position%8,e.row=Math.floor(e.position/8);const t=[[-1,0],[1,0],[0,-1],[0,1],[-1,-1],[-1,1],[1,-1],[1,1]];if("swordsman"===e.character.type){for(const[s,i]of t)for(let t=1;t<=4;t++){const a=e.column+s*t,o=e.row+i*t,n=8*o+a;a>=0&&a<8&&o>=0&&o<8&&!this.enemyTeamPositions.includes(n)&&!this.playerTeamPositions.includes(n)&&e.allowedMove.push(n)}const s=e.column,i=e.row,a=1;for(let t=-a;t<=a;t++)for(let o=-a;o<=a;o++){if(0===t&&0===o)continue;const a=s+t,n=i+o;if(a>=0&&a<8&&n>=0&&n<8){const l=8*n+a;let r=!1,h=1;for(;;){const e=s+t*h,l=i+o*h;if(e===a&&l===n)break;const c=8*l+e;if(this.playerTeamPositions.includes(c)){r=!0;break}h++}r||this.playerTeamPositions.includes(l)||e.allowedDamage.push(l)}}}if("bowman"===e.character.type){for(const[s,i]of t)for(let t=1;t<=2;t++){const a=e.column+s*t,o=e.row+i*t,n=8*o+a;a>=0&&a<8&&o>=0&&o<8&&!this.enemyTeamPositions.includes(n)&&!this.playerTeamPositions.includes(n)&&e.allowedMove.push(n)}const s=e.column,i=e.row,a=2;for(let t=-a;t<=a;t++)for(let o=-a;o<=a;o++){if(0===t&&0===o)continue;const a=s+t,n=i+o;if(a>=0&&a<8&&n>=0&&n<8){const l=8*n+a;let r=!1,h=1;for(;;){const e=s+t*h,l=i+o*h;if(e===a&&l===n)break;const c=8*l+e;if(this.playerTeamPositions.includes(c)){r=!0;break}h++}r||this.playerTeamPositions.includes(l)||e.allowedDamage.push(l)}}}if("magician"===e.character.type){for(const[s,i]of t)for(let t=1;t<=1;t++){const a=e.column+s*t,o=e.row+i*t,n=8*o+a;a>=0&&a<8&&o>=0&&o<8&&!this.enemyTeamPositions.includes(n)&&!this.playerTeamPositions.includes(n)&&e.allowedMove.push(n)}const s=e.column,i=e.row,a=4;for(let t=-a;t<=a;t++)for(let o=-a;o<=a;o++){if(0===t&&0===o)continue;const a=s+t,n=i+o;if(a>=0&&a<8&&n>=0&&n<8){const l=8*n+a;let r=!1,h=1;for(;;){const e=s+t*h,l=i+o*h;if(e===a&&l===n)break;const c=8*l+e;if(this.playerTeamPositions.includes(c)){r=!0;break}h++}r||this.playerTeamPositions.includes(l)||e.allowedDamage.push(l)}}}}defineEnemyOpportunities(e){e.allowedDamage=[],e.allowedMove=[],e.column=e.position%8,e.row=Math.floor(e.position/8);const t=[[-1,0],[1,0],[0,-1],[0,1],[-1,-1],[-1,1],[1,-1],[1,1]];if("undead"===e.character.type){for(const[s,i]of t)for(let t=1;t<=4;t++){const a=e.column+s*t,o=e.row+i*t,n=8*o+a;a>=0&&a<8&&o>=0&&o<8&&!this.enemyTeamPositions.includes(n)&&!this.playerTeamPositions.includes(n)&&e.allowedMove.push(n)}const s=e.column,i=e.row,a=1;for(let t=-a;t<=a;t++)for(let o=-a;o<=a;o++){if(0===t&&0===o)continue;const a=s+t,n=i+o;if(a>=0&&a<8&&n>=0&&n<8){const l=8*n+a;let r=!1,h=1;for(;;){const e=s+t*h,l=i+o*h;if(e===a&&l===n)break;const c=8*l+e;if(this.enemyTeamPositions.includes(c)){r=!0;break}h++}r||this.enemyTeamPositions.includes(l)||e.allowedDamage.push(l)}}}if("vampire"===e.character.type){for(const[s,i]of t)for(let t=1;t<=2;t++){const a=e.column+s*t,o=e.row+i*t,n=8*o+a;a>=0&&a<8&&o>=0&&o<8&&!this.enemyTeamPositions.includes(n)&&!this.playerTeamPositions.includes(n)&&e.allowedMove.push(n)}const s=e.column,i=e.row,a=2;for(let t=-a;t<=a;t++)for(let o=-a;o<=a;o++){if(0===t&&0===o)continue;const a=s+t,n=i+o;if(a>=0&&a<8&&n>=0&&n<8){const l=8*n+a;let r=!1,h=1;for(;;){const e=s+t*h,l=i+o*h;if(e===a&&l===n)break;const c=8*l+e;if(this.enemyTeamPositions.includes(c)){r=!0;break}h++}r||this.enemyTeamPositions.includes(l)||e.allowedDamage.push(l)}}}if("daemon"===e.character.type){for(const[s,i]of t)for(let t=1;t<=1;t++){const a=e.column+s*t,o=e.row+i*t,n=8*o+a;a>=0&&a<8&&o>=0&&o<8&&!this.enemyTeamPositions.includes(n)&&!this.playerTeamPositions.includes(n)&&e.allowedMove.push(n)}const s=e.column,i=e.row,a=4;for(let t=-a;t<=a;t++)for(let o=-a;o<=a;o++){if(0===t&&0===o)continue;const a=s+t,n=i+o;if(a>=0&&a<8&&n>=0&&n<8){const l=8*n+a;let r=!1,h=1;for(;;){const e=s+t*h,l=i+o*h;if(e===a&&l===n)break;const c=8*l+e;if(this.enemyTeamPositions.includes(c)){r=!0;break}h++}r||this.enemyTeamPositions.includes(l)||e.allowedDamage.push(l)}}}}move(e){if(!1===this.gameState.step)return;const t=this.currentHero.position,s=this.teamPositions.indexOf(t);if(this.currentHero.position=e,this.currentSelected=e,this.teamPositions.splice(s,1,e),"bowman"===this.currentHero.character.type||"swordsman"===this.currentHero.character.type||"magician"===this.currentHero.character.type){const s=this.playerTeamPositions.indexOf(t);this.playerTeamPositions.splice(s,1,e)}else{const s=this.enemyTeamPositions.indexOf(t);this.enemyTeamPositions.splice(s,1,e)}this.gamePlay.deselectCell(t),this.gamePlay.redrawPositions(this.positionedTeams),this.gamePlay.deselectCell(this.currentHero.position),this.currentHero=null,this.currentSelected=null,this.noOneSelected=!0,this.gameState.step=!this.gameState.step}moveEnemy(e){const t=this.currentHero.position,s=this.teamPositions.indexOf(t);if(this.currentHero.position=e,this.currentSelected=e,this.teamPositions.splice(s,1,e),"daemon"===this.currentHero.character.type||"undead"===this.currentHero.character.type||"vampire"===this.currentHero.character.type){const s=this.enemyTeamPositions.indexOf(t);this.enemyTeamPositions.splice(s,1,e)}this.gamePlay.deselectCell(t),this.gamePlay.redrawPositions(this.positionedTeams),this.currentHero=null,this.currentSelected=null,this.noOneSelected=!0,this.gameState.step=!this.gameState.step}attack(e){const t=this.currentHero.character.attack,s=this.positionedTeams.find((t=>t.position===e)),i=s.character.defence,a=Math.max(t-i,.1*t);this.gamePlay.showDamage(e,a).then((t=>{s.character.health=s.character.health-a,s.character.health<=0&&this.deathEnemy(s),this.gamePlay.redrawPositions(this.positionedTeams),this.gamePlay.deselectCell(this.currentHero.position),this.gamePlay.deselectCell(e),this.currentHero=null,this.noOneSelected=!0,this.currentSelected=null,this.gameState.step=!this.gameState.step,this.deselectAllCells(),this.enemyStep()}))}attackEnemy(e){const t=this.currentHero.character.attack,s=this.positionedTeams.find((t=>t.position===e)),i=s.character.defence,a=Math.max(t-i,.1*t);this.gamePlay.showDamage(e,a).then((e=>{s.character.health=s.character.health-a,s.character.health<=0&&this.deathHero(s),this.gamePlay.redrawPositions(this.positionedTeams),this.currentHero=null,this.noOneSelected=!0,this.currentSelected=null,this.gameState.step=!this.gameState.step}))}enemyStep(){const e=Math.floor(Math.random()*this.enemyTeamPositions.length),t=this.enemyTeamPositions[e],s=this.positionedTeams.find((e=>e.position===t));this.defineEnemyOpportunities(s),this.currentHero=s,this.currentSelected=this.currentHero.position;const i=this.currentHero.allowedDamage,a=this.playerTeamPositions.find((e=>i.includes(e)));if(this.positionedTeams.find((e=>e.position===a)))this.attackEnemy(a);else{const e=Math.floor(Math.random()*this.currentHero.allowedMove.length),t=this.currentHero.allowedMove[e];this.moveEnemy(t)}}deathEnemy(e){const t=e.position,s=this.enemyTeamPositions.indexOf(t);this.enemyTeamPositions.splice(s,1);const i=this.teamPositions.indexOf(t);this.teamPositions.splice(i,1);const a=this.positionedTeams.indexOf(e);this.positionedTeams.splice(a,1),0===this.enemyTeamPositions.length&&(this.changeTheme(),this.livelyTeam=[...this.bench,...this.positionedTeams],this.positionedTeams,this.levelUp(this.livelyTeam),!1===this.fieldBlocked&&this.newRound())}deathHero(e){const t=e.position;this.bench.push(e);const s=this.playerTeamPositions.indexOf(t);this.playerTeamPositions.splice(s,1);const i=this.teamPositions.indexOf(t);this.teamPositions.splice(i,1);const a=this.positionedTeams.indexOf(e);this.positionedTeams.splice(a,1),0===this.playerTeamPositions.length&&this.blockField()}changeTheme(){"prairie"===this.ui?this.drawUi("desert"):"desert"===this.ui?this.drawUi("arctic"):"arctic"===this.ui?this.drawUi("mountain"):"mountain"===this.ui&&this.blockField()}newRound(){const e=[0,8,16,24,32,40,48,56,1,9,17,25,33,41,49,57],t=[6,14,22,30,38,46,54,62,7,15,23,31,39,47,55,63],i=a([n,h,c],2,3),o=[],l=[],r=[...this.livelyTeam];for(let a=0;a<3;a++){let n=Math.floor(Math.random()*e.length),h=Math.floor(Math.random()*t.length);for(;o.includes(e[n]);)n=Math.floor(Math.random()*e.length);for(o.push(e[n]);l.includes(t[h]);)h=Math.floor(Math.random()*t.length);l.push(t[h]),r[a].position=o[a];const c=new s(i[a],l[a]);r.push(c)}this.enemyTeamPositions=l,this.playerTeamPositions=o,this.teamPositions=[...o,...l],this.positionedTeams=r,this.gamePlay.redrawPositions(r),this.deselectAllCells()}blockField(){this.fieldBlocked=!0,this.gamePlay.cellClickListeners.pop(),this.gamePlay.cellEnterListeners.pop(),this.gamePlay.cellLeaveListeners.pop(),this.gamePlay.setCursor("auto")}deselectAllCells(){for(let e=0;e<64;e++)this.gamePlay.deselectCell(e)}levelUp(e){e.forEach((e=>{!0===this.saveLoaded?this.UpLvl(e.character):e.character.lvlUp(),e.character.health+80>100?e.character.health=100:e.character.health+80<1?e.char.health=1:e.character.health=e.character.health+80}))}buttonSaveGame(){this.stateService.save(this)}buttonLoadGame(){this.saveLoaded=!0;const e=this.stateService.load();this.bench=e.bench,this.currentHero=e.currentHero,this.currentSelected=e.currentSelected,this.enemyTeamPositions=e.enemyTeamPositions,this.fieldBlocked=e.fieldBlocked,this.gameState=e.gameState,this.livelyTeam=e.livelyTeam,this.noOneSelected=e.noOneSelected,this.playerTeamPositions=e.playerTeamPositions,this.positionedTeams=JSON.parse(JSON.stringify(e.positionedTeams)),this.teamPositions=e.teamPositions,this.ui=e.ui,this.drawUi(this.ui),this.gamePlay.redrawPositions(this.positionedTeams)}UpLvl(e){const t=Math.max(e.attack,e.attack*(80+e.health)/100),s=Math.max(e.defence,e.defence*(80+e.health)/100);e.attack=Math.round(t),e.defence=Math.round(s),e.level=e.level+1}}(m,u);p.init()})();